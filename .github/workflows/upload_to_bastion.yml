name: Upload Ansible to Bastion

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment (e.g., dev)"
        required: true
        default: "dev"
      ssh_user:
        description: "SSH user for Bastion"
        required: true
        default: "ec2-user"

permissions:
  id-token: write
  contents: read

jobs:
  upload:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.env }}

    env:
      ENV: ${{ github.event.inputs.env }}
      BASTION_HOST: ${{ secrets.BASTION_HOST }}
      BASTION_SSH_KEY: ${{ secrets.BASTION_SSH_KEY }}
      OIDC_ROLE_ARN_GITHUB: ${{ secrets.OIDC_ROLE_ARN_GITHUB }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: check
        run: |
          echo "ENV: $ENV"
          echo "BASTION_SSH_KEY: $BASTION_SSH_KEY"
          echo "OIDC_ROLE_ARN_GITHUB: $OIDC_ROLE_ARN_GITHUB"
        
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_ARN_GITHUB }}
          aws-region: ap-northeast-1
          audience: sts.amazonaws.com

      - name: Get Bastion Public IP
        id: get_ip
        run: |
          BASTION_IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=$ENV-bastion-ansible" "Name=instance-state-name,Values=running" \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "bastion_ip=$BASTION_IP" >> $GITHUB_OUTPUT

      - name: Fail if Bastion IP not found
        if: steps.get_ip.outputs.bastion_ip == ''
        run: |
          echo "Bastion IP not found"
          exit 1

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.BASTION_SSH_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Set up known_hosts
        run: |
          ssh-keyscan ${{ steps.get_ip.outputs.bastion_ip}} >> ~/.ssh/known_hosts

      - name: Upload Ansible directory
        run: |
          rsync -avz ansible/ ${{ github.event.inputs.ssh_user }}@${{ steps.get_ip.outputs.bastion_ip }}:~/ansible/

      #- name: Upload ZIP file
      #  run: |
      #    rsync -avz lambda/lambda.zip ec2-user@${{ secrets.BASTION_HOST }}:~/lambda.zip

      ## オプション: 転送後にbastion_ansibleでansible-playbookを実行
      #- name: (Optional) Run playbook on bastion
      #  run: |
      #    ssh ec2-user@${{ secrets.BASTION_HOST }} "cd ~/ansible && ENV=${{ env.ENV }} ansible-playbook deploy.yml -i inventory.ini"
